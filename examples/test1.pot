import NatList

main = take m (app (app (fromBy n (mul n n))));

app xs = zipandpair xs xs;

fromBy a b = C(a, fromBy (plus a b) b);

zipandpair xs ys =
  case xs of
    C(h1, t1) -> (case t1 of
                      C(h2, t2) -> (case ys of 
                                      C(h3, t3) -> (case t3 of
                                                      C(h4, t4) -> (case t4 of
                                                                      C(h5, t5) -> C(P(h1, h2, h3, h4, h5), zipandpair t5 t2)
                                                                      | N -> N)
                                                      | N -> N)
                                      | N -> N)
                      | N -> N)
    | N -> N;

take n xs = case n of
              Succ(n) -> (case xs of C(h,t) -> (C(h, take n t)) | N -> N)
              | Zero -> N
